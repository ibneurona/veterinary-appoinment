{"ast":null,"code":"import _toConsumableArray from\"/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import Formulario from'./components/Formulario';import Cita from\"./components/Cita\";import PropTypes from'prop-types';function App(){var citasIniciales=JSON.parse(localStorage.getItem('citas'));if(!citasIniciales){citasIniciales=[];}var _useState=useState(citasIniciales),_useState2=_slicedToArray(_useState,2),citas=_useState2[0],setCitas=_useState2[1];//useEffect para cuando el estado cambia\nuseEffect(function(){if(citasIniciales){localStorage.setItem(\"citas\",JSON.stringify(citas));}else{localStorage.setItem(\"citas\",JSON.stringify([]));}},[citas,citasIniciales]);//guarda las citas\nvar crearCitas=function crearCitas(cita){setCitas([].concat(_toConsumableArray(citas),[cita]));};//funcion para eliminar cita\nvar eliminarCita=function eliminarCita(id){var nuevasCitas=citas.filter(function(cita){return cita.id!==id;});setCitas(nuevasCitas);};//Mensaje de condicional de citas\nvar tituloCitas=citas.length===0?'No hay citas':'Administra tus citas';return React.createElement(Fragment,null,React.createElement(\"h1\",null,\"Administrador de pacientes Veterinarios\"),React.createElement(\"div\",{className:\"container\"},React.createElement(\"div\",{className:\"row\"},React.createElement(\"div\",{className:\"one-half column\"},React.createElement(Formulario,{crearCitas:crearCitas})),React.createElement(\"div\",{className:\"one-half column\"},React.createElement(\"h1\",null,tituloCitas),citas.map(function(cita){return React.createElement(Cita,{key:cita.id,cita:cita,eliminarCita:eliminarCita});})))));}//Documentado de componentes\nFormulario.propType={crearCitas:PropTypes.func.isRequired};export default App;","map":{"version":3,"sources":["/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","PropTypes","App","citasIniciales","JSON","parse","localStorage","getItem","citas","setCitas","setItem","stringify","crearCitas","cita","eliminarCita","id","nuevasCitas","filter","tituloCitas","length","map","propType","func","isRequired"],"mappings":"oRAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,QAAvB,CAAgCC,SAAhC,KAAgD,OAAhD,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CAGA,QAASC,CAAAA,GAAT,EAAe,CAEb,GAAIC,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CACA,GAAI,CAACJ,cAAL,CAAqB,CACnBA,cAAc,CAAG,EAAjB,CACD,CALY,cAOaN,QAAQ,CAACM,cAAD,CAPrB,wCAONK,KAPM,eAOCC,QAPD,eASb;AACAX,SAAS,CAAC,UAAM,CACd,GAAIK,cAAJ,CAAoB,CAClBG,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B,EACD,CAFD,IAEO,CACLF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAe,EAAf,CAA9B,EACD,CACF,CANQ,CAMN,CAACH,KAAD,CAAQL,cAAR,CANM,CAAT,CAQA;AACA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,IAAI,CAAI,CACzBJ,QAAQ,8BAAKD,KAAL,GAAYK,IAAZ,GAAR,CACD,CAFD,CAIA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,EAAE,CAAI,CAEzB,GAAMC,CAAAA,WAAW,CAAGR,KAAK,CAACS,MAAN,CAAa,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAhB,EAAjB,CAApB,CACAN,QAAQ,CAACO,WAAD,CAAR,CACD,CAJD,CAMA;AACA,GAAME,CAAAA,WAAW,CAAGV,KAAK,CAACW,MAAN,GAAiB,CAAjB,CAAqB,cAArB,CAAsC,sBAA1D,CAEA,MACE,qBAAC,QAAD,MACE,wEADF,CAEE,2BAAK,SAAS,CAAC,WAAf,EACE,2BAAK,SAAS,CAAC,KAAf,EACE,2BAAK,SAAS,CAAC,iBAAf,EACE,oBAAC,UAAD,EAAY,UAAU,CAAEP,UAAxB,EADF,CADF,CAIE,2BAAK,SAAS,CAAC,iBAAf,EACE,8BAAKM,WAAL,CADF,CAEGV,KAAK,CAACY,GAAN,CAAU,SAAAP,IAAI,QACb,qBAAC,IAAD,EACE,GAAG,CAAIA,IAAI,CAACE,EADd,CAEE,IAAI,CAAIF,IAFV,CAGE,YAAY,CAAIC,YAHlB,EADa,EAAd,CAFH,CAJF,CADF,CAFF,CADF,CAsBD,CACD;AACAf,UAAU,CAACsB,QAAX,CAAsB,CACpBT,UAAU,CAAEX,SAAS,CAACqB,IAAV,CAAeC,UADP,CAAtB,CAIA,cAAerB,CAAAA,GAAf","sourcesContent":["import React,{Fragment,useState,useEffect} from 'react';\nimport Formulario from './components/Formulario';\nimport Cita from \"./components/Cita\";\nimport PropTypes from 'prop-types';\n\n\nfunction App() {\n\n  let citasIniciales = JSON.parse(localStorage.getItem('citas'));\n  if (!citasIniciales) {\n    citasIniciales = []\n  }\n\n  const [citas, setCitas] = useState(citasIniciales);\n\n  //useEffect para cuando el estado cambia\n  useEffect(() => {\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas, citasIniciales]);\n  \n  //guarda las citas\n  const crearCitas = cita => {\n    setCitas([...citas, cita]);\n  }\n  \n  //funcion para eliminar cita\n  const eliminarCita = id => {\n\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    setCitas(nuevasCitas);\n  }\n\n  //Mensaje de condicional de citas\n  const tituloCitas = citas.length === 0 ? 'No hay citas' : 'Administra tus citas'; \n\n  return (\n    <Fragment>\n      <h1>Administrador de pacientes Veterinarios</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario crearCitas={crearCitas} />\n          </div>\n          <div className=\"one-half column\">\n            <h1>{tituloCitas}</h1>\n            {citas.map(cita => (\n              <Cita \n                key = {cita.id} \n                cita = {cita} \n                eliminarCita = {eliminarCita} \n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n//Documentado de componentes\nFormulario.propType = {\n  crearCitas: PropTypes.func.isRequired,\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}