{"ast":null,"code":"import _defineProperty from\"/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from'react';import uuid from'uuid/v4';var Formulario=function Formulario(_ref){var crearCitas=_ref.crearCitas;//State de el componente\nvar _useState=useState({mascota:'',propietario:'',fecha:'',hora:'',sintomas:''}),_useState2=_slicedToArray(_useState,2),cita=_useState2[0],actualizarCita=_useState2[1];//funcion que se ejecuta cada vez que escribe el usuario\nvar handleOnChange=function handleOnChange(e){actualizarCita(_objectSpread({},cita,_defineProperty({},e.target.name,e.target.value)));};//extraccion de valores de los inputs\nvar mascota=cita.mascota,propietario=cita.propietario,fecha=cita.fecha,hora=cita.hora,sintomas=cita.sintomas;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],agergarError=_useState4[1];//Funcion para agregar citas\nvar agregaCita=function agregaCita(e){e.preventDefault();//validar\nif(mascota.trim()===''||propietario.trim()===''||fecha.trim()===''||hora.trim()===''||sintomas.trim()===''){agergarError(true);return;}//Error cita\nagergarError(false);//asignaar un id\ncita.id=uuid();//Crear cita\ncrearCitas(cita);//reiniciar inputs\nactualizarCita({mascota:\"\",propietario:\"\",fecha:\"\",hora:\"\",sintomas:\"\"});};return React.createElement(Fragment,null,React.createElement(\"h2\",null,\"Crear Cita\"),React.createElement(\"form\",{onSubmit:agregaCita},error?React.createElement(\"p\",{className:\"alerta-error\"},\"Todos los campos est\\xE1n vac\\xEDos\"):null,React.createElement(\"label\",null,\"Nombre Mascota\"),React.createElement(\"input\",{type:\"text\",name:\"mascota\",className:\"u-full-width\",placeholder:\"Nombre Mascota\",onChange:handleOnChange,value:mascota}),React.createElement(\"label\",null,\"Nombre Due\\xF1o\"),React.createElement(\"input\",{type:\"text\",name:\"propietario\",className:\"u-full-width\",placeholder:\"Nombre del Due\\xF1o \",onChange:handleOnChange,value:propietario}),React.createElement(\"label\",null,\"Fecha\"),React.createElement(\"input\",{type:\"date\",name:\"fecha\",className:\"u-full-width\",onChange:handleOnChange,value:fecha}),React.createElement(\"label\",null,\"Hora\"),React.createElement(\"input\",{type:\"time\",name:\"hora\",className:\"u-full-width\",onChange:handleOnChange,value:hora}),React.createElement(\"label\",null,\"S\\xEDntomas\"),React.createElement(\"textarea\",{className:\"u-full-width\",name:\"sintomas\",onChange:handleOnChange,value:sintomas}),React.createElement(\"button\",{type:\"submit\",className:\"u-full-width button-primary\"},\"Agregar Cita\")));};export default Formulario;","map":{"version":3,"sources":["/home/ome/AA_Code/WebDev/REACTJS/medical-appoinment/src/components/Formulario.js"],"names":["React","useState","Fragment","uuid","Formulario","crearCitas","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","handleOnChange","e","target","name","value","error","agergarError","agregaCita","preventDefault","trim","id"],"mappings":"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","sourcesContent":["import React,{useState, Fragment} from 'react';\nimport uuid from 'uuid/v4';\n\n\nconst Formulario = ({crearCitas}) => {\n  \n  //State de el componente\n  const [cita, actualizarCita] = useState({\n    mascota: '',\n    propietario: '',\n    fecha: '',\n    hora: '',\n    sintomas: ''\n  });\n\n  //funcion que se ejecuta cada vez que escribe el usuario\n  const handleOnChange = (e) => {\n    actualizarCita({\n      ...cita,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //extraccion de valores de los inputs\n  const {mascota, propietario, fecha, hora, sintomas} = cita;\n\n  const [error,agergarError] = useState(false)\n\n  //Funcion para agregar citas\n  const agregaCita = (e) => {\n    e.preventDefault();\n\n    //validar\n    if(mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === ''){\n      agergarError(true)\n      return;\n    }\n\n    //Error cita\n    agergarError(false);\n\n    //asignaar un id\n    cita.id = uuid();\n    \n    //Crear cita\n    crearCitas(cita);\n    \n    //reiniciar inputs\n    actualizarCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\"\n    });\n\n  };\n\n  return (\n    <Fragment>\n      <h2>Crear Cita</h2>\n      <form onSubmit={agregaCita}>\n        {error ? <p className=\"alerta-error\">Todos los campos están vacíos</p> : null}\n        <label>Nombre Mascota</label>\n        <input\n          type = \"text\"\n          name = \"mascota\"\n          className = \"u-full-width\"\n          placeholder = \"Nombre Mascota\"\n          onChange = {handleOnChange}\n          value = {mascota}\n        />\n        <label>Nombre Dueño</label>\n        <input\n          type=\"text\"\n          name=\"propietario\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre del Dueño \"\n          onChange={handleOnChange}\n          value = {propietario}\n        />\n        <label>Fecha</label>\n        <input\n          type=\"date\"\n          name=\"fecha\"\n          className=\"u-full-width\"\n          onChange={handleOnChange}\n          value = {fecha}\n        />\n        <label>Hora</label>\n        <input\n          type=\"time\"\n          name=\"hora\"\n          className=\"u-full-width\"\n          onChange={handleOnChange}\n          value = {hora}\n        />\n        <label>Síntomas</label>\n        <textarea\n          className=\"u-full-width\"\n          name=\"sintomas\"\n          onChange={handleOnChange}\n          value = {sintomas}\n        ></textarea>\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          Agregar Cita\n        </button>\n      </form>\n    </Fragment>\n  );\n}\n \nexport default Formulario;"]},"metadata":{},"sourceType":"module"}